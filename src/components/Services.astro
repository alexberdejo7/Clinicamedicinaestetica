---
import { services } from '../utils/services.js';
---
<section id="services" class="py-16 bg-white">
    <div class="mx-auto max-w-7xl px-3">
        <h2 class="text-5xl font-semibold font-roboto mb-3 text-center text-custom-blueobscure">Servicios</h2>
        <p class="font-roboto text-center text-sm text-md max-w-80 mx-auto text-aqua-silver-strong">  Innovación, confianza y resultados visibles. Conocelos todos! </p>
        
        <div class="grid grid-cols-1 p-3 md:grid-cols-1 lg:w-full mx-auto lg:grid-cols-2 lg:p- gap-y-10 lg:gap-x-10">
          {services.map((service) => (
            <div class="relative bg-white rounded-lg shadow-xl overflow-hidden transition-all duration-300 hover:shadow-lg hover:bg-slate-200 flex flex-col justify-between 
            max-w-md mx-auto"> <!-- max-w-md ajusta el ancho máximo para que se vean más pequeñas -->
              <div class="relative group">
                <img src={service.imageList} alt={service.name} class="w-full h-40 brightness-75 object-cover transition-transform duration-500 ease-in 
                group-hover:brightness-105 group-hover:saturate-100" />
                <div class="absolute inset-0 flex items-center justify-center bg-gray-900 bg-opacity-50 transition-transform duration-500 ease-in group-hover:scale-105">
                  <h3 class="text-white font-oswald max-w-44 text-xl font-extrabold px-4 py-2 transition-transform duration-500 ease-in group-hover:scale-105">{service.name}</h3>
                </div>
              </div>
              
              <div class="p-3 mt-2 mb-3 h-full flex flex-col">
                <!-- Añadimos el icono SVG -->
                <div class="flex items-center space-x-2 mb-2">
                  <img src={service.icon} alt={service.name + ' icon'} class="w-6 overflow-hidden h-6"/>
                  <p class="font-roboto max-w-72 text-gray-900 text-sm">{service.description}</p>
                </div>
              </div>
              
              <div class="flex-grow"></div> <!-- Espacio flexible para empujar el botón hacia abajo -->
              <div class="w-full mt-auto">
                <button class="bg-pastel-blue-strong font-raleway text-gray-800 py-3 text-sm font-semibold rounded 
                rounded-t-none w-full hover:bg-aqua-strong transition-all ver-mas-btn" data-id={service.id}>
                  Ver Tratamiento
                </button>
              </div>
            </div>
          ))}
        </div>
    
  
        <div id="service-details" class=" bg-pastel-blue-soft  p-8 rounded-lg shadow-sm hidden max-w-7xl mx-auto">
          <h2 id="service-title" class="text-4xl font-montserrat font-semibold mb-4 text-custom-blueobscure text-center"></h2>
          <p id="service-description" class="mb-6 font-montserrat text-gray-600 text-center"></p>
          
          <!-- Updated container for service images -->
          <div id="service-images" class="flex flex-wrap justify-center gap-4 mb-6">
              <img class="w-32 h-32 sm:w-40 sm:h-40 md:w-48 md:h-48 object-cover rounded-lg shadow-md m-2 transition-transform duration-300 hover:scale-105" src="" alt="Service image 1">
              <img class="w-32 h-32 sm:w-40 sm:h-40 md:w-48 md:h-48 object-cover rounded-lg shadow-md m-2 transition-transform duration-300 hover:scale-105" src="" alt="Service image 2">
          </div>
          
          <h3 class="text-xl font-semibold font-montserrat mb-4 text-custom-blueobscure text-center">Preguntas frecuentes</h3>
          <ul id="service-faqs" class="space-y-4"></ul>
      </div>
    </div>
  </section>
  <script>
    import { services } from '../utils/services.js';
  
    document.addEventListener('DOMContentLoaded', () => {
      const verMasBtns = document.querySelectorAll('.ver-mas-btn');
      const serviceDetails = document.getElementById('service-details');
      const serviceTitle = document.getElementById('service-title');
      const serviceDescription = document.getElementById('service-description');
      const serviceImages = document.getElementById('service-images').querySelectorAll('img');
      const serviceFaqs = document.getElementById('service-faqs');
  
      function updateServiceImages(images) {
        serviceImages.forEach((imgElement, index) => {
          if (index < images.length) {
            imgElement.src = images[index];
            imgElement.style.display = 'block';
          } else {
            imgElement.style.display = 'none';
          }
        });
      }
  
      verMasBtns.forEach(button => {
        button.addEventListener('click', (e) => {
          const target = e.currentTarget as HTMLElement;
          const serviceId = target.getAttribute('data-id');
          const service = services.find(s => s.id === serviceId);
          
          if (service) {
            serviceTitle.textContent = service.name;
            serviceDescription.textContent = service.fullDescription;
            
            // Update service images
            updateServiceImages(service.imageService || []);
            
            serviceFaqs.innerHTML = service.faqs.map(faq => `
              <li class="bg-gray-200 text-gray-900 p-4 text-center font-roboto rounded-lg faq-item transition-all duration-200 hover:bg-gray-300 cursor-pointer">
                <div class="flex justify-between items-center faq-question">
                  <h4 class="font-semibold text-gray-800 text-custom">${faq.question}</h4>
                  <span class="text-aqua-strong font-bold transition-transform duration-300 transform">+</span>
                </div>
                <p class="text-gray-600 faq-answer hidden mt-2">${faq.answer}</p>
              </li>
            `).join('');
  
            serviceDetails.classList.remove('hidden');
            serviceDetails.scrollIntoView({ behavior: 'smooth', block: 'start' });
  
            // Comportamiento del acordeón
            const faqItems = document.querySelectorAll('.faq-item');
            faqItems.forEach(item => {
              const question = item.querySelector('.faq-question');
              const answer = item.querySelector('.faq-answer');
              const toggleIcon = question.querySelector('span');
  
              question.addEventListener('click', () => {
                answer.classList.toggle('hidden');
                toggleIcon.textContent = answer.classList.contains('hidden') ? '+' : '-';
                toggleIcon.classList.toggle('rotate-180');
                item.classList.toggle('faq-expanded');
              });
            });
          }
        });
      });
    });
  </script>

  <style>
    .faq-item:hover {
      background-color: #f0f4f8; /* Cambio de color de fondo en hover */
    }
  
    .faq-item .faq-question span {
      transition: transform 0.5s ease-in-out; /* Transición suave para el ícono */
    }
  
    .faq-expanded .faq-question span {
      transform: rotate(180deg); /* Rotación del ícono cuando se expande */
    }
  
    


    
  </style>
  